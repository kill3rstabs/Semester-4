************************************************************************
QUESTION # 1:
************************************************************************
========================================================================
WITH OPENMP
========================================================================
#include<stdio.h>
#include<omp.h>
#include<stdlib.h>
#include<time.h>
float calculate_sum(int tid,float s){
	return 1.0/(tid+1);
}
int main(){
	FILE* fptr;
	char stime[10];
	float sum = 0;
	time_t start,stop;
	int n;
	printf("Enter the value of n: ");
	scanf("%d",&n);
	time(&start);
	#pragma omp parallel num_threads(n)
	{
		sum += calculate_sum(omp_get_thread_num(),sum);
	}

	printf("The sum of the series is: %f\n",sum);
	time(&stop);
	sprintf(stime,"%f",difftime(stop,start));
	fptr = fopen("logg.txt","a");
	fputs("With open MP: ",fptr);
	fputs(stime,fptr);
	fputs("\n",fptr);
	fclose(fptr);
}
========================================================================
WITHOUT OPENMP
========================================================================
#include<stdio.h>
#include<time.h>
#include<stdlib.h>

int main(){
	FILE* fptr;
	time_t start,stop;
	char stime[10];
	float sum = 0;
	int n;
	printf("Enter the value of n: ");
	scanf("%d",&n);
	time(&start);
	for(int i=0;i<n;i++){
		sum += 1.0/(i+1);
	}
	time(&stop);
	printf("The sum of the series is %f\n",sum);
	sprintf(stime,"%f",difftime(stop,start));
	fptr = fopen("logg.txt","a");
	fputs("Without open MP: ",fptr);
	fputs(stime,fptr);
	fputs("\n",fptr);
	fclose(fptr);
}
************************************************************************
QUESTION # 2:
************************************************************************
========================================================================
WITH OPENMP
========================================================================
#include<stdio.h>
#include<time.h>
#include<stdlib.h>
#include<omp.h>
int main(){
	time_t start,stop;
	float sum = 0;
	int n;
	printf("Enter the value of n: ");
	scanf("%d",&n);
	int a[n][n],b[n][n],c[n][n];
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			printf("Enter a[%d][%d]: ",i,j);
			scanf("%d",&a[i][j]);		
		}	
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			printf("Enter b[%d][%d]: ",i,j);
			scanf("%d",&b[i][j]);		
		}	
	}
	time(&start);
	#pragma omp parallel num_threads(n)
	{
		int i = omp_get_thread_num();
		for(int j=0;j<n;j++){
			c[i][j] = a[i][j] + b[i][j];	
		}
	}
	time(&stop);
	printf("The resultant matrix is: \n");
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			printf("%d ",c[i][j]);		
		}	
		printf("\n");
	}
	printf("Total time taken: %f\n",difftime(stop,start));
}
========================================================================
WITHOUT OPENMP
========================================================================
#include<stdio.h>
#include<time.h>
#include<stdlib.h>

int main(){
	time_t start,stop;
	float sum = 0;
	int n;
	printf("Enter the value of n: ");
	scanf("%d",&n);
	int a[n][n],b[n][n],c[n][n];
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			printf("Enter a[%d][%d]: ",i,j);
			scanf("%d",&a[i][j]);		
		}	
	}
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			printf("Enter b[%d][%d]: ",i,j);
			scanf("%d",&b[i][j]);		
		}	
	}
	time(&start);
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			c[i][j] = a[i][j] + b[i][j];		
		}	
	}
	time(&stop);
	printf("The resultant matrix is: \n");
	for(int i=0;i<n;i++){
		for(int j=0;j<n;j++){
			printf("%d ",c[i][j]);		
		}	
		printf("\n");
	}
	printf("Total time taken: %f\n",difftime(stop,start));
}
